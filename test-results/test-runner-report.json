{
  "startTime": "2025-07-10T02:18:49.770Z",
  "endTime": "2025-07-10T02:18:55.121Z",
  "duration": 5351,
  "tests": {
    "unit": {
      "success": false,
      "duration": 3697,
      "exitCode": 1,
      "stdout": "\n> answer-trap-risk-profile-survey@1.0.0 test:unit\n> jest --testPathPattern=tests/unit\n\n",
      "stderr": "FAIL tests/unit/DataService.test.js\n  ● Test suite failed to run\n\n    TypeError: (0 , _jestWorker(...).messageParent) is not a function\n\n      at sendMessageToJest (node_modules/jest-runner/build/testWorker.js:102:35)\n\nPASS tests/unit/basic.test.js\n  Basic Unit Tests\n    √ should perform basic arithmetic (16 ms)\n    √ should handle arrays (2 ms)\n    √ should handle objects (2 ms)\n    √ should handle async operations (1 ms)\n    √ should mock functions (6 ms)\n\nFAIL tests/unit/ChartLoader.test.js\n  ChartLoader\n    loadChartJS\n      × should load Chart.js successfully (16 ms)\n      × should return cached Chart.js if already loaded (3 ms)\n      × should handle Chart.js loading error (2 ms)\n      × should handle timeout (1 ms)\n      × should verify integrity after loading (1 ms)\n    loadjsPDF\n      × should load jsPDF successfully\n      × should return cached jsPDF if already loaded (1 ms)\n      × should handle jsPDF loading error (2 ms)\n    loadMultiple\n      × should load multiple libraries successfully (2 ms)\n      × should handle partial loading failure (1 ms)\n      × should handle invalid library names (1 ms)\n    preloadOnIdle\n      × should preload libraries when browser is idle (1 ms)\n      × should fallback to setTimeout if requestIdleCallback not available (1 ms)\n    isChartJSLoaded\n      × should return true when Chart.js is loaded\n      × should return false when Chart.js is not loaded (1 ms)\n    isjsPDFLoaded\n      × should return true when jsPDF is loaded (1 ms)\n      × should return false when jsPDF is not loaded\n    getLoadedLibraries\n      × should return list of loaded libraries (1 ms)\n      × should return empty array when no libraries loaded\n    clearCache\n      × should clear loaded libraries from global scope (1 ms)\n    Error Handling\n      × should handle network errors gracefully\n      × should clean up script elements on error (1 ms)\n    Performance\n      × should track loading performance\n    Concurrent Loading\n      × should handle concurrent load requests (1 ms)\n\n  ● ChartLoader › loadChartJS › should load Chart.js successfully\n\n    TypeError: ChartLoader.loadChartJS is not a function\n\n    \u001b[0m \u001b[90m 57 |\u001b[39m   describe(\u001b[32m'loadChartJS'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 58 |\u001b[39m     test(\u001b[32m'should load Chart.js successfully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m       \u001b[36mconst\u001b[39m loadPromise \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadChartJS()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 60 |\u001b[39m       \n     \u001b[90m 61 |\u001b[39m       \u001b[90m// Simulate successful script loading\u001b[39m\n     \u001b[90m 62 |\u001b[39m       setTimeout(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.loadChartJS (tests/unit/ChartLoader.test.js:59:39)\n\n  ● ChartLoader › loadChartJS › should return cached Chart.js if already loaded\n\n    TypeError: ChartLoader.loadChartJS is not a function\n\n    \u001b[0m \u001b[90m 82 |\u001b[39m       global\u001b[33m.\u001b[39m\u001b[33mChart\u001b[39m \u001b[33m=\u001b[39m { version\u001b[33m:\u001b[39m \u001b[32m'4.0.0'\u001b[39m }\u001b[33m;\u001b[39m\n     \u001b[90m 83 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 84 |\u001b[39m       \u001b[36mawait\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadChartJS()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 85 |\u001b[39m       \n     \u001b[90m 86 |\u001b[39m       expect(document\u001b[33m.\u001b[39mcreateElement)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\n     \u001b[90m 87 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.loadChartJS (tests/unit/ChartLoader.test.js:84:25)\n\n  ● ChartLoader › loadChartJS › should handle Chart.js loading error\n\n    TypeError: ChartLoader.loadChartJS is not a function\n\n    \u001b[0m \u001b[90m 88 |\u001b[39m\n     \u001b[90m 89 |\u001b[39m     test(\u001b[32m'should handle Chart.js loading error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 90 |\u001b[39m       \u001b[36mconst\u001b[39m loadPromise \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadChartJS()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 91 |\u001b[39m       \n     \u001b[90m 92 |\u001b[39m       \u001b[90m// Simulate script loading error\u001b[39m\n     \u001b[90m 93 |\u001b[39m       setTimeout(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.loadChartJS (tests/unit/ChartLoader.test.js:90:39)\n\n  ● ChartLoader › loadChartJS › should handle timeout\n\n    TypeError: ChartLoader.loadChartJS is not a function\n\n    \u001b[0m \u001b[90m 105 |\u001b[39m       \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mtimeout \u001b[33m=\u001b[39m \u001b[35m50\u001b[39m\u001b[33m;\u001b[39m \u001b[90m// Short timeout for testing\u001b[39m\n     \u001b[90m 106 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m       \u001b[36mconst\u001b[39m loadPromise \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadChartJS()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 108 |\u001b[39m       \n     \u001b[90m 109 |\u001b[39m       \u001b[36mawait\u001b[39m expect(loadPromise)\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[32m'Timeout loading Chart.js'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 110 |\u001b[39m       \u001b[0m\n\n      at Object.loadChartJS (tests/unit/ChartLoader.test.js:107:39)\n\n  ● ChartLoader › loadChartJS › should verify integrity after loading\n\n    TypeError: ChartLoader.loadChartJS is not a function\n\n    \u001b[0m \u001b[90m 113 |\u001b[39m\n     \u001b[90m 114 |\u001b[39m     test(\u001b[32m'should verify integrity after loading'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 115 |\u001b[39m       \u001b[36mconst\u001b[39m loadPromise \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadChartJS()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 116 |\u001b[39m       \n     \u001b[90m 117 |\u001b[39m       setTimeout(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 118 |\u001b[39m         \u001b[90m// Simulate Chart.js loading but with wrong version\u001b[39m\u001b[0m\n\n      at Object.loadChartJS (tests/unit/ChartLoader.test.js:115:39)\n\n  ● ChartLoader › loadjsPDF › should load jsPDF successfully\n\n    TypeError: ChartLoader.loadjsPDF is not a function\n\n    \u001b[0m \u001b[90m 129 |\u001b[39m   describe(\u001b[32m'loadjsPDF'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 130 |\u001b[39m     test(\u001b[32m'should load jsPDF successfully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 131 |\u001b[39m       \u001b[36mconst\u001b[39m loadPromise \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadjsPDF()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 132 |\u001b[39m       \n     \u001b[90m 133 |\u001b[39m       \u001b[90m// Simulate successful script loading\u001b[39m\n     \u001b[90m 134 |\u001b[39m       setTimeout(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.loadjsPDF (tests/unit/ChartLoader.test.js:131:39)\n\n  ● ChartLoader › loadjsPDF › should return cached jsPDF if already loaded\n\n    TypeError: ChartLoader.loadjsPDF is not a function\n\n    \u001b[0m \u001b[90m 151 |\u001b[39m       global\u001b[33m.\u001b[39mjspdf \u001b[33m=\u001b[39m { jsPDF\u001b[33m:\u001b[39m jest\u001b[33m.\u001b[39mfn() }\u001b[33m;\u001b[39m\n     \u001b[90m 152 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 153 |\u001b[39m       \u001b[36mawait\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadjsPDF()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 154 |\u001b[39m       \n     \u001b[90m 155 |\u001b[39m       expect(document\u001b[33m.\u001b[39mcreateElement)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\n     \u001b[90m 156 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.loadjsPDF (tests/unit/ChartLoader.test.js:153:25)\n\n  ● ChartLoader › loadjsPDF › should handle jsPDF loading error\n\n    TypeError: ChartLoader.loadjsPDF is not a function\n\n    \u001b[0m \u001b[90m 157 |\u001b[39m\n     \u001b[90m 158 |\u001b[39m     test(\u001b[32m'should handle jsPDF loading error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 159 |\u001b[39m       \u001b[36mconst\u001b[39m loadPromise \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadjsPDF()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 160 |\u001b[39m       \n     \u001b[90m 161 |\u001b[39m       setTimeout(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 162 |\u001b[39m         \u001b[36mif\u001b[39m (mockScript\u001b[33m.\u001b[39monerror) {\u001b[0m\n\n      at Object.loadjsPDF (tests/unit/ChartLoader.test.js:159:39)\n\n  ● ChartLoader › loadMultiple › should load multiple libraries successfully\n\n    TypeError: ChartLoader.loadMultiple is not a function\n\n    \u001b[0m \u001b[90m 171 |\u001b[39m   describe(\u001b[32m'loadMultiple'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 172 |\u001b[39m     test(\u001b[32m'should load multiple libraries successfully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 173 |\u001b[39m       \u001b[36mconst\u001b[39m loadPromise \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadMultiple([\u001b[32m'chartjs'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'jspdf'\u001b[39m])\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 174 |\u001b[39m       \n     \u001b[90m 175 |\u001b[39m       \u001b[90m// Simulate successful loading of both libraries\u001b[39m\n     \u001b[90m 176 |\u001b[39m       setTimeout(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.loadMultiple (tests/unit/ChartLoader.test.js:173:39)\n\n  ● ChartLoader › loadMultiple › should handle partial loading failure\n\n    TypeError: ChartLoader.loadMultiple is not a function\n\n    \u001b[0m \u001b[90m 193 |\u001b[39m\n     \u001b[90m 194 |\u001b[39m     test(\u001b[32m'should handle partial loading failure'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 195 |\u001b[39m       \u001b[36mconst\u001b[39m loadPromise \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadMultiple([\u001b[32m'chartjs'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'jspdf'\u001b[39m])\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 196 |\u001b[39m       \n     \u001b[90m 197 |\u001b[39m       setTimeout(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 198 |\u001b[39m         global\u001b[33m.\u001b[39m\u001b[33mChart\u001b[39m \u001b[33m=\u001b[39m { version\u001b[33m:\u001b[39m \u001b[32m'4.0.0'\u001b[39m }\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.loadMultiple (tests/unit/ChartLoader.test.js:195:39)\n\n  ● ChartLoader › loadMultiple › should handle invalid library names\n\n    TypeError: ChartLoader.loadMultiple is not a function\n\n    \u001b[0m \u001b[90m 207 |\u001b[39m\n     \u001b[90m 208 |\u001b[39m     test(\u001b[32m'should handle invalid library names'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 209 |\u001b[39m       \u001b[36mawait\u001b[39m expect(\u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadMultiple([\u001b[32m'invalid'\u001b[39m]))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[32m'Unknown library: invalid'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 210 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 211 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 212 |\u001b[39m\u001b[0m\n\n      at Object.loadMultiple (tests/unit/ChartLoader.test.js:209:32)\n\n  ● ChartLoader › preloadOnIdle › should preload libraries when browser is idle\n\n    TypeError: ChartLoader.preloadOnIdle is not a function\n\n    \u001b[0m \u001b[90m 213 |\u001b[39m   describe(\u001b[32m'preloadOnIdle'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 214 |\u001b[39m     test(\u001b[32m'should preload libraries when browser is idle'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 215 |\u001b[39m       \u001b[36mconst\u001b[39m preloadPromise \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mpreloadOnIdle([\u001b[32m'chartjs'\u001b[39m])\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 216 |\u001b[39m       \n     \u001b[90m 217 |\u001b[39m       \u001b[90m// Simulate idle callback\u001b[39m\n     \u001b[90m 218 |\u001b[39m       setTimeout(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.preloadOnIdle (tests/unit/ChartLoader.test.js:215:42)\n\n  ● ChartLoader › preloadOnIdle › should fallback to setTimeout if requestIdleCallback not available\n\n    TypeError: ChartLoader.preloadOnIdle is not a function\n\n    \u001b[0m \u001b[90m 238 |\u001b[39m       \u001b[36mdelete\u001b[39m global\u001b[33m.\u001b[39mrequestIdleCallback\u001b[33m;\u001b[39m\n     \u001b[90m 239 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 240 |\u001b[39m       \u001b[36mconst\u001b[39m preloadPromise \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mpreloadOnIdle([\u001b[32m'chartjs'\u001b[39m])\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 241 |\u001b[39m       \n     \u001b[90m 242 |\u001b[39m       setTimeout(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 243 |\u001b[39m         global\u001b[33m.\u001b[39m\u001b[33mChart\u001b[39m \u001b[33m=\u001b[39m { version\u001b[33m:\u001b[39m \u001b[32m'4.0.0'\u001b[39m }\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.preloadOnIdle (tests/unit/ChartLoader.test.js:240:42)\n\n  ● ChartLoader › isChartJSLoaded › should return true when Chart.js is loaded\n\n    TypeError: ChartLoader.isChartJSLoaded is not a function\n\n    \u001b[0m \u001b[90m 256 |\u001b[39m     test(\u001b[32m'should return true when Chart.js is loaded'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 257 |\u001b[39m       global\u001b[33m.\u001b[39m\u001b[33mChart\u001b[39m \u001b[33m=\u001b[39m { version\u001b[33m:\u001b[39m \u001b[32m'4.0.0'\u001b[39m }\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 258 |\u001b[39m       expect(\u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39misChartJSLoaded())\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 259 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 260 |\u001b[39m\n     \u001b[90m 261 |\u001b[39m     test(\u001b[32m'should return false when Chart.js is not loaded'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.isChartJSLoaded (tests/unit/ChartLoader.test.js:258:26)\n\n  ● ChartLoader › isChartJSLoaded › should return false when Chart.js is not loaded\n\n    TypeError: ChartLoader.isChartJSLoaded is not a function\n\n    \u001b[0m \u001b[90m 261 |\u001b[39m     test(\u001b[32m'should return false when Chart.js is not loaded'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 262 |\u001b[39m       \u001b[36mdelete\u001b[39m global\u001b[33m.\u001b[39m\u001b[33mChart\u001b[39m\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 263 |\u001b[39m       expect(\u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39misChartJSLoaded())\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 264 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 265 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 266 |\u001b[39m\u001b[0m\n\n      at Object.isChartJSLoaded (tests/unit/ChartLoader.test.js:263:26)\n\n  ● ChartLoader › isjsPDFLoaded › should return true when jsPDF is loaded\n\n    TypeError: ChartLoader.isjsPDFLoaded is not a function\n\n    \u001b[0m \u001b[90m 268 |\u001b[39m     test(\u001b[32m'should return true when jsPDF is loaded'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 269 |\u001b[39m       global\u001b[33m.\u001b[39mjspdf \u001b[33m=\u001b[39m { jsPDF\u001b[33m:\u001b[39m jest\u001b[33m.\u001b[39mfn() }\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 270 |\u001b[39m       expect(\u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39misjsPDFLoaded())\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 271 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 272 |\u001b[39m\n     \u001b[90m 273 |\u001b[39m     test(\u001b[32m'should return false when jsPDF is not loaded'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.isjsPDFLoaded (tests/unit/ChartLoader.test.js:270:26)\n\n  ● ChartLoader › isjsPDFLoaded › should return false when jsPDF is not loaded\n\n    TypeError: ChartLoader.isjsPDFLoaded is not a function\n\n    \u001b[0m \u001b[90m 273 |\u001b[39m     test(\u001b[32m'should return false when jsPDF is not loaded'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 274 |\u001b[39m       \u001b[36mdelete\u001b[39m global\u001b[33m.\u001b[39mjspdf\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 275 |\u001b[39m       expect(\u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39misjsPDFLoaded())\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 276 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 277 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 278 |\u001b[39m\u001b[0m\n\n      at Object.isjsPDFLoaded (tests/unit/ChartLoader.test.js:275:26)\n\n  ● ChartLoader › getLoadedLibraries › should return list of loaded libraries\n\n    TypeError: ChartLoader.getLoadedLibraries is not a function\n\n    \u001b[0m \u001b[90m 282 |\u001b[39m       global\u001b[33m.\u001b[39mjspdf \u001b[33m=\u001b[39m { jsPDF\u001b[33m:\u001b[39m jest\u001b[33m.\u001b[39mfn() }\u001b[33m;\u001b[39m\n     \u001b[90m 283 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 284 |\u001b[39m       \u001b[36mconst\u001b[39m loaded \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mgetLoadedLibraries()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 285 |\u001b[39m       \n     \u001b[90m 286 |\u001b[39m       expect(loaded)\u001b[33m.\u001b[39mtoContain(\u001b[32m'chartjs'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 287 |\u001b[39m       expect(loaded)\u001b[33m.\u001b[39mtoContain(\u001b[32m'jspdf'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.getLoadedLibraries (tests/unit/ChartLoader.test.js:284:34)\n\n  ● ChartLoader › getLoadedLibraries › should return empty array when no libraries loaded\n\n    TypeError: ChartLoader.getLoadedLibraries is not a function\n\n    \u001b[0m \u001b[90m 292 |\u001b[39m       \u001b[36mdelete\u001b[39m global\u001b[33m.\u001b[39mjspdf\u001b[33m;\u001b[39m\n     \u001b[90m 293 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 294 |\u001b[39m       \u001b[36mconst\u001b[39m loaded \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mgetLoadedLibraries()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 295 |\u001b[39m       \n     \u001b[90m 296 |\u001b[39m       expect(loaded)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m 297 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.getLoadedLibraries (tests/unit/ChartLoader.test.js:294:34)\n\n  ● ChartLoader › clearCache › should clear loaded libraries from global scope\n\n    TypeError: ChartLoader.clearCache is not a function\n\n    \u001b[0m \u001b[90m 303 |\u001b[39m       global\u001b[33m.\u001b[39mjspdf \u001b[33m=\u001b[39m { jsPDF\u001b[33m:\u001b[39m jest\u001b[33m.\u001b[39mfn() }\u001b[33m;\u001b[39m\n     \u001b[90m 304 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 305 |\u001b[39m       \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mclearCache()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 306 |\u001b[39m       \n     \u001b[90m 307 |\u001b[39m       expect(global\u001b[33m.\u001b[39m\u001b[33mChart\u001b[39m)\u001b[33m.\u001b[39mtoBeUndefined()\u001b[33m;\u001b[39m\n     \u001b[90m 308 |\u001b[39m       expect(global\u001b[33m.\u001b[39mjspdf)\u001b[33m.\u001b[39mtoBeUndefined()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.clearCache (tests/unit/ChartLoader.test.js:305:19)\n\n  ● ChartLoader › Error Handling › should handle network errors gracefully\n\n    TypeError: ChartLoader.loadChartJS is not a function\n\n    \u001b[0m \u001b[90m 312 |\u001b[39m   describe(\u001b[32m'Error Handling'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 313 |\u001b[39m     test(\u001b[32m'should handle network errors gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 314 |\u001b[39m       \u001b[36mconst\u001b[39m loadPromise \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadChartJS()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 315 |\u001b[39m       \n     \u001b[90m 316 |\u001b[39m       setTimeout(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 317 |\u001b[39m         \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Network error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.loadChartJS (tests/unit/ChartLoader.test.js:314:39)\n\n  ● ChartLoader › Error Handling › should clean up script elements on error\n\n    TypeError: ChartLoader.loadChartJS is not a function\n\n    \u001b[0m \u001b[90m 326 |\u001b[39m\n     \u001b[90m 327 |\u001b[39m     test(\u001b[32m'should clean up script elements on error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 328 |\u001b[39m       \u001b[36mconst\u001b[39m loadPromise \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadChartJS()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 329 |\u001b[39m       \n     \u001b[90m 330 |\u001b[39m       setTimeout(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 331 |\u001b[39m         \u001b[36mif\u001b[39m (mockScript\u001b[33m.\u001b[39monerror) {\u001b[0m\n\n      at Object.loadChartJS (tests/unit/ChartLoader.test.js:328:39)\n\n  ● ChartLoader › Performance › should track loading performance\n\n    TypeError: ChartLoader.loadChartJS is not a function\n\n    \u001b[0m \u001b[90m 343 |\u001b[39m       \u001b[36mconst\u001b[39m startTime \u001b[33m=\u001b[39m performance\u001b[33m.\u001b[39mnow()\u001b[33m;\u001b[39m\n     \u001b[90m 344 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 345 |\u001b[39m       \u001b[36mconst\u001b[39m loadPromise \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadChartJS()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 346 |\u001b[39m       \n     \u001b[90m 347 |\u001b[39m       setTimeout(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 348 |\u001b[39m         global\u001b[33m.\u001b[39m\u001b[33mChart\u001b[39m \u001b[33m=\u001b[39m { version\u001b[33m:\u001b[39m \u001b[32m'4.0.0'\u001b[39m }\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.loadChartJS (tests/unit/ChartLoader.test.js:345:39)\n\n  ● ChartLoader › Concurrent Loading › should handle concurrent load requests\n\n    TypeError: ChartLoader.loadChartJS is not a function\n\n    \u001b[0m \u001b[90m 361 |\u001b[39m   describe(\u001b[32m'Concurrent Loading'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 362 |\u001b[39m     test(\u001b[32m'should handle concurrent load requests'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 363 |\u001b[39m       \u001b[36mconst\u001b[39m promise1 \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadChartJS()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 364 |\u001b[39m       \u001b[36mconst\u001b[39m promise2 \u001b[33m=\u001b[39m \u001b[33mChartLoader\u001b[39m\u001b[33m.\u001b[39mloadChartJS()\u001b[33m;\u001b[39m\n     \u001b[90m 365 |\u001b[39m       \n     \u001b[90m 366 |\u001b[39m       setTimeout(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.loadChartJS (tests/unit/ChartLoader.test.js:363:36)\n\nFAIL tests/unit/ChartManager.test.js\n  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: C:\\My Programing projects\\Survey\\250706\\tests\\unit\\ChartManager.test.js: Identifier 'ChartManager' has already been declared. (22:4)\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m \u001b[90m// Load ChartManager class\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m \u001b[36mlet\u001b[39m \u001b[33mChartManager\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m beforeAll(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 25 |\u001b[39m   \u001b[90m// Enhanced Chart.js mock\u001b[39m\u001b[0m\n\n      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)\n      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1503:19)\n      at ScopeHandler.raise [as checkRedeclarationInScope] (node_modules/@babel/parser/src/util/scope.ts:164:19)\n      at ScopeHandler.checkRedeclarationInScope [as declareName] (node_modules/@babel/parser/src/util/scope.ts:118:12)\n      at Parser.declareName [as declareNameFromIdentifier] (node_modules/@babel/parser/src/parser/lval.ts:818:16)\n      at Parser.declareNameFromIdentifier [as checkIdentifier] (node_modules/@babel/parser/src/parser/lval.ts:813:12)\n      at Parser.checkIdentifier [as checkLVal] (node_modules/@babel/parser/src/parser/lval.ts:713:12)\n      at Parser.checkLVal [as parseVarId] (node_modules/@babel/parser/src/parser/statement.ts:1628:10)\n      at Parser.parseVarId [as parseVar] (node_modules/@babel/parser/src/parser/statement.ts:1577:12)\n      at Parser.parseVar [as parseVarStatement] (node_modules/@babel/parser/src/parser/statement.ts:1246:10)\n      at Parser.parseVarStatement [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:607:21)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)\n      at Parser.parseStatementLike [as parseModuleItem] (node_modules/@babel/parser/src/parser/statement.ts:414:17)\n      at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1438:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)\n      at Parser.parseBlockBody [as parseProgram] (node_modules/@babel/parser/src/parser/statement.ts:229:10)\n      at Parser.parseProgram [as parseTopLevel] (node_modules/@babel/parser/src/parser/statement.ts:203:25)\n      at Parser.parseTopLevel [as parse] (node_modules/@babel/parser/src/parser/index.ts:93:10)\n      at parse (node_modules/@babel/parser/src/index.ts:92:38)\n      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)\n          at parser.next (<anonymous>)\n      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:49:24)\n          at normalizeFile.next (<anonymous>)\n      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)\n          at run.next (<anonymous>)\n      at transform (node_modules/@babel/core/src/transform.ts:29:20)\n          at transform.next (<anonymous>)\n      at evaluateSync (node_modules/gensync/index.js:251:28)\n      at sync (node_modules/gensync/index.js:89:14)\n      at fn (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)\n      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)\n      at ScriptTransformer.transformSource (node_modules/@jest/transform/build/ScriptTransformer.js:545:31)\n      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:674:40)\n      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:726:19)\n\nTest Suites: 3 failed, 1 passed, 4 total\nTests:       24 failed, 5 passed, 29 total\nSnapshots:   0 total\nTime:        2.206 s\nRan all test suites matching /tests\\\\unit/i.\n"
    }
  },
  "summary": {
    "total": 1,
    "passed": 0,
    "failed": 1,
    "skipped": 0
  }
}